create database flight;
use flight;

-- CREATION
create table flights(
flno int,
from_ varchar(20),
to_ varchar(20),
distance int,
departs time,
arrives time,
price int,
PRIMARY KEY(flno)
);
create table aircraft(
aid int,
aname varchar(20),
cruisingRange int,
PRIMARY KEY(aid)
);
create table employee(
eid int,
ename varchar(20),
salary int,
PRIMARY KEY(eid)
);
create table certified(
eid int,
aid int,
FOREIGN KEY(eid) REFERENCES employee(eid) on update cascade on delete cascade,
FOREIGN KEY(aid) REFERENCES aircraft(aid) on update cascade on delete cascade
);

-- INSERTION
insert into employee values(101,'Avinash',50000);
insert into employee values(102,'Lokesh',60000);
insert into employee values(103,'Rakesh',70000);
insert into employee values(104,'Santhosh',82000);
insert into employee values(105,'Tilak',5000);

insert into aircraft values(1,'Airbus',2000);
insert into aircraft values(2,'Boeing',700);
insert into aircraft values(3,'JetAirways',550);
insert into aircraft values(4,'Indigo',5000);
insert into aircraft values(5,'Boeing',4500);
insert into aircraft values(6,'Airbus',2200);

insert into certified values(101,2);
insert into certified values(101,4);
insert into certified values(101,5);
insert into certified values(101,6);
insert into certified values(102,1);
insert into certified values(102,3);
insert into certified values(102,5);
insert into certified values(103,2);
insert into certified values(103,3);
insert into certified values(103,5);
insert into certified values(103,6);
insert into certified values(104,6);
insert into certified values(104,1);
insert into certified values(104,3);
insert into certified values(105,3);

insert into flights values(1,'Bengaluru','NewDelhi',500,'06:00','09:00',5000);
insert into flights values(2,'Bengaluru','Chennai',300,'07:00','08:30',3000);
insert into flights values(3,'Trivandrum','NewDelhi',800,'08:00','11:30',6000);
insert into flights values(4,'Bengaluru','Frankfurt',10000,'06:00','23:30',50000);
insert into flights values(5,'Kolkata','NewDelhi',2400,'11:00','03:30',9000);
insert into flights values(6,'Bengaluru','Frankfurt',8000,'09:00','23:00',40000);

-- SELECTION
select * from employee;
select * from aircraft;
select * from certified;
select * from flights;

-- TO DO QUERIES
-- 1. Find the names of aircraft such that all pilots certified to operate them have
-- salaries more than Rs.80,000.
select (a.aname) from employee e inner join certified c
on e.eid=c.eid and e.salary>80000 inner join aircraft a on a.aid=c.aid;

-- 2. For each pilot who is certified for more than three aircrafts, find the eid and
-- the maximum cruising range of the aircraft for which she or he is certified
select c.eid, max(a.cruisingRange)
from aircraft a, certified c
where c.aid=a.aid group by c.eid having count(*)>=3;

-- 3. Find the names of pilots whose salary is less than the price of the cheapest
-- route from Bengaluru to Frankfurt.
select ename from employee where salary<some(select price from flights where from_='Bengaluru' and to_='Frankfurt');

-- 4. For all aircraft with cruising range over 1000 Kms, find the name of the
-- aircraft and the average salary of all pilots certified for this aircraft.
select c.aid,a.aname, AVG(e.salary) from certified c, aircraft a, employee e where a.cruisingRange>1000 and e.eid=c.eid and a.aid=c.aid group by c.aid ; 

-- 5. Find the names of pilots certified for some Boeing aircraft.
select distinct e.ename from employee e, certified c, aircraft a where a.aid=c.aid and e.eid=c.eid and a.aname='Boeing';

-- 6. Find the aids of all aircraft that can be used on routes from Bengaluru to
-- New Delhi.
select a.aid from flights f, aircraft a where (f.from_='Bengaluru' and f.to_='NewDelhi') and f.distance<=a.cruisingRange;
